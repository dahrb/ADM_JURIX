test_combination_contribution_only (__main__.TestSubADMEvaluation)
Test: Combination Contribution Only ... FAIL
test_complex_all_positive (__main__.TestSubADMEvaluation)
Test: Complex scenario with all positive factors ... FAIL
test_complex_mixed_with_reject (__main__.TestSubADMEvaluation)
Test: Complex scenario with reject conditions ... ok
test_computer_simulation_with_technical_adaptation (__main__.TestSubADMEvaluation)
Test: Computer Simulation + Technical Adaptation ... FAIL
test_independent_contribution_only (__main__.TestSubADMEvaluation)
Test: Independent Contribution Only ... FAIL
test_independent_with_circumvent_tech_problem (__main__.TestSubADMEvaluation)
Test: Independent Contribution + CircumventTechProblem (should be rejected) ... FAIL
test_independent_with_credible_reproducible (__main__.TestSubADMEvaluation)
Test: Independent Contribution + Credible + Reproducible ... ok
test_independent_with_excluded_field (__main__.TestSubADMEvaluation)
Test: Independent Contribution + Excluded Field (should be rejected) ... FAIL
test_independent_with_unexpected_effect (__main__.TestSubADMEvaluation)
Test: Independent Contribution + Unexpected Effect + Precise Terms + One Way Street ... FAIL
test_mathematical_method_with_specific_purpose (__main__.TestSubADMEvaluation)
Test: Mathematical Method + Specific Purpose + Functionally Limited ... FAIL
test_no_blfs (__main__.TestSubADMEvaluation)
Test: No BLFs (edge case) ... FAIL
test_only_circumvent_tech_problem (__main__.TestSubADMEvaluation)
Test: Only CircumventTechProblem ... FAIL
test_only_excluded_field (__main__.TestSubADMEvaluation)
Test: Only Excluded Field ... FAIL

======================================================================
FAIL: test_combination_contribution_only (__main__.TestSubADMEvaluation)
Test: Combination Contribution Only
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 70, in test_combination_contribution_only
    self.assert_final_case("Combination Contribution Only", blf_list, expected_final_case)
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 42, in assert_final_case
    self.assertEqual(
AssertionError: Items in the first set but not the second:
'NonReproducible' : Expected: ['DistinguishingFeatures', 'CombinationContribution', 'NormalTechnicalContribution', 'FeatureTechnicalContribution'], Got: ['DistinguishingFeatures', 'CombinationContribution', 'NonReproducible', 'NormalTechnicalContribution', 'FeatureTechnicalContribution']

======================================================================
FAIL: test_complex_all_positive (__main__.TestSubADMEvaluation)
Test: Complex scenario with all positive factors
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 171, in test_complex_all_positive
    self.assert_final_case("Complex All Positive Factors", blf_list, expected_final_case)
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 42, in assert_final_case
    self.assertEqual(
AssertionError: Items in the first set but not the second:
'ExcludedField'
'NumOrComp'
Items in the second set but not the first:
'NormalTechnicalContribution' : Expected: ['DistinguishingFeatures', 'IndependentContribution', 'ComputerSimulation', 'TechnicalAdaptation', 'Credible', 'Reproducible', 'NormalTechnicalContribution', 'ComputationalContribution', 'FeatureTechnicalContribution', 'ReliableTechnicalEffect'], Got: ['DistinguishingFeatures', 'IndependentContribution', 'ComputerSimulation', 'TechnicalAdaptation', 'Credible', 'Reproducible', 'NumOrComp', 'ComputationalContribution', 'ExcludedField', 'FeatureTechnicalContribution', 'ReliableTechnicalEffect']

======================================================================
FAIL: test_computer_simulation_with_technical_adaptation (__main__.TestSubADMEvaluation)
Test: Computer Simulation + Technical Adaptation
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 107, in test_computer_simulation_with_technical_adaptation
    self.assert_final_case("Computer Simulation + Technical Adaptation", blf_list, expected_final_case)
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 42, in assert_final_case
    self.assertEqual(
AssertionError: Items in the first set but not the second:
'NonReproducible'
'ExcludedField'
'NumOrComp' : Expected: ['DistinguishingFeatures', 'ComputerSimulation', 'TechnicalAdaptation', 'ComputationalContribution', 'FeatureTechnicalContribution'], Got: ['DistinguishingFeatures', 'ComputerSimulation', 'TechnicalAdaptation', 'NumOrComp', 'NonReproducible', 'ComputationalContribution', 'ExcludedField', 'FeatureTechnicalContribution']

======================================================================
FAIL: test_independent_contribution_only (__main__.TestSubADMEvaluation)
Test: Independent Contribution Only
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 58, in test_independent_contribution_only
    self.assert_final_case("Independent Contribution Only", blf_list, expected_final_case)
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 42, in assert_final_case
    self.assertEqual(
AssertionError: Items in the first set but not the second:
'NonReproducible' : Expected: ['DistinguishingFeatures', 'IndependentContribution', 'NormalTechnicalContribution', 'FeatureTechnicalContribution'], Got: ['DistinguishingFeatures', 'IndependentContribution', 'NonReproducible', 'NormalTechnicalContribution', 'FeatureTechnicalContribution']

======================================================================
FAIL: test_independent_with_circumvent_tech_problem (__main__.TestSubADMEvaluation)
Test: Independent Contribution + CircumventTechProblem (should be rejected)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 82, in test_independent_with_circumvent_tech_problem
    self.assert_final_case("Independent + CircumventTechProblem (rejected)", blf_list, expected_final_case)
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 42, in assert_final_case
    self.assertEqual(
AssertionError: Items in the first set but not the second:
'NonReproducible' : Expected: ['DistinguishingFeatures', 'IndependentContribution', 'CircumventTechProblem'], Got: ['DistinguishingFeatures', 'IndependentContribution', 'CircumventTechProblem', 'NonReproducible']

======================================================================
FAIL: test_independent_with_excluded_field (__main__.TestSubADMEvaluation)
Test: Independent Contribution + Excluded Field (should be rejected)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 94, in test_independent_with_excluded_field
    self.assert_final_case("Independent + Excluded Field (rejected)", blf_list, expected_final_case)
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 42, in assert_final_case
    self.assertEqual(
AssertionError: Items in the first set but not the second:
'NonReproducible'
'ExcludedField'
'NumOrComp' : Expected: ['DistinguishingFeatures', 'IndependentContribution', 'ComputerSimulation'], Got: ['DistinguishingFeatures', 'IndependentContribution', 'ComputerSimulation', 'NumOrComp', 'NonReproducible', 'ExcludedField']

======================================================================
FAIL: test_independent_with_unexpected_effect (__main__.TestSubADMEvaluation)
Test: Independent Contribution + Unexpected Effect + Precise Terms + One Way Street
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 138, in test_independent_with_unexpected_effect
    self.assert_final_case("Independent + Unexpected Effect + Precise Terms + One Way Street", blf_list, expected_final_case)
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 42, in assert_final_case
    self.assertEqual(
AssertionError: Items in the first set but not the second:
'NonReproducible' : Expected: ['DistinguishingFeatures', 'IndependentContribution', 'NormalTechnicalContribution', 'FeatureTechnicalContribution', 'UnexpectedEffect', 'PreciseTerms', 'OneWayStreet', 'BonusEffect'], Got: ['DistinguishingFeatures', 'IndependentContribution', 'UnexpectedEffect', 'PreciseTerms', 'OneWayStreet', 'NonReproducible', 'NormalTechnicalContribution', 'FeatureTechnicalContribution', 'BonusEffect']

======================================================================
FAIL: test_mathematical_method_with_specific_purpose (__main__.TestSubADMEvaluation)
Test: Mathematical Method + Specific Purpose + Functionally Limited
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 122, in test_mathematical_method_with_specific_purpose
    self.assert_final_case("Mathematical Method + Specific Purpose + Functionally Limited", blf_list, expected_final_case)
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 42, in assert_final_case
    self.assertEqual(
AssertionError: Items in the first set but not the second:
'NonReproducible'
'ExcludedField' : Expected: ['DistinguishingFeatures', 'MathematicalMethod', 'SpecificPurpose', 'FunctionallyLimited', 'AppliedInField', 'MathematicalContribution', 'FeatureTechnicalContribution'], Got: ['DistinguishingFeatures', 'MathematicalMethod', 'SpecificPurpose', 'FunctionallyLimited', 'NonReproducible', 'AppliedInField', 'MathematicalContribution', 'ExcludedField', 'FeatureTechnicalContribution']

======================================================================
FAIL: test_no_blfs (__main__.TestSubADMEvaluation)
Test: No BLFs (edge case)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 194, in test_no_blfs
    self.assert_final_case("No BLFs (Base Case Only)", blf_list, expected_final_case)
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 42, in assert_final_case
    self.assertEqual(
AssertionError: Items in the first set but not the second:
'NonReproducible' : Expected: ['DistinguishingFeatures'], Got: ['DistinguishingFeatures', 'NonReproducible']

======================================================================
FAIL: test_only_circumvent_tech_problem (__main__.TestSubADMEvaluation)
Test: Only CircumventTechProblem
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 214, in test_only_circumvent_tech_problem
    self.assert_final_case("Only Circumvent Tech Problem", blf_list, expected_final_case)
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 42, in assert_final_case
    self.assertEqual(
AssertionError: Items in the first set but not the second:
'NonReproducible' : Expected: ['DistinguishingFeatures', 'CircumventTechProblem'], Got: ['DistinguishingFeatures', 'CircumventTechProblem', 'NonReproducible']

======================================================================
FAIL: test_only_excluded_field (__main__.TestSubADMEvaluation)
Test: Only Excluded Field
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 204, in test_only_excluded_field
    self.assert_final_case("Only Excluded Field", blf_list, expected_final_case)
  File "/mnt/scratch/users/sgdbareh/ADM_JURIX/test_sub_adm_unit.py", line 42, in assert_final_case
    self.assertEqual(
AssertionError: Items in the first set but not the second:
'NonReproducible'
'ExcludedField' : Expected: ['DistinguishingFeatures', 'OtherExclusions'], Got: ['DistinguishingFeatures', 'OtherExclusions', 'NonReproducible', 'ExcludedField']

----------------------------------------------------------------------
Ran 13 tests in 0.004s

FAILED (failures=11)
Running Sub-ADM Unit Tests...
============================================================

Test: Combination Contribution Only
BLFs: ['CombinationContribution']
Expected: ['CombinationContribution', 'DistinguishingFeatures', 'FeatureTechnicalContribution', 'NormalTechnicalContribution']
Actual:   ['CombinationContribution', 'DistinguishingFeatures', 'FeatureTechnicalContribution', 'NonReproducible', 'NormalTechnicalContribution']

Test: Complex All Positive Factors
BLFs: ['IndependentContribution', 'ComputerSimulation', 'TechnicalAdaptation', 'Credible', 'Reproducible']
Expected: ['ComputationalContribution', 'ComputerSimulation', 'Credible', 'DistinguishingFeatures', 'FeatureTechnicalContribution', 'IndependentContribution', 'NormalTechnicalContribution', 'ReliableTechnicalEffect', 'Reproducible', 'TechnicalAdaptation']
Actual:   ['ComputationalContribution', 'ComputerSimulation', 'Credible', 'DistinguishingFeatures', 'ExcludedField', 'FeatureTechnicalContribution', 'IndependentContribution', 'NumOrComp', 'ReliableTechnicalEffect', 'Reproducible', 'TechnicalAdaptation']

Test: Complex Mixed with Reject
BLFs: ['IndependentContribution', 'CircumventTechProblem', 'Credible', 'Reproducible']
Expected: ['CircumventTechProblem', 'Credible', 'DistinguishingFeatures', 'IndependentContribution', 'Reproducible']
Actual:   ['CircumventTechProblem', 'Credible', 'DistinguishingFeatures', 'IndependentContribution', 'Reproducible']

Test: Computer Simulation + Technical Adaptation
BLFs: ['ComputerSimulation', 'TechnicalAdaptation']
Expected: ['ComputationalContribution', 'ComputerSimulation', 'DistinguishingFeatures', 'FeatureTechnicalContribution', 'TechnicalAdaptation']
Actual:   ['ComputationalContribution', 'ComputerSimulation', 'DistinguishingFeatures', 'ExcludedField', 'FeatureTechnicalContribution', 'NonReproducible', 'NumOrComp', 'TechnicalAdaptation']

Test: Independent Contribution Only
BLFs: ['IndependentContribution']
Expected: ['DistinguishingFeatures', 'FeatureTechnicalContribution', 'IndependentContribution', 'NormalTechnicalContribution']
Actual:   ['DistinguishingFeatures', 'FeatureTechnicalContribution', 'IndependentContribution', 'NonReproducible', 'NormalTechnicalContribution']

Test: Independent + CircumventTechProblem (rejected)
BLFs: ['IndependentContribution', 'CircumventTechProblem']
Expected: ['CircumventTechProblem', 'DistinguishingFeatures', 'IndependentContribution']
Actual:   ['CircumventTechProblem', 'DistinguishingFeatures', 'IndependentContribution', 'NonReproducible']

Test: Independent + Credible + Reproducible
BLFs: ['IndependentContribution', 'Credible', 'Reproducible']
Expected: ['Credible', 'DistinguishingFeatures', 'FeatureTechnicalContribution', 'IndependentContribution', 'NormalTechnicalContribution', 'ReliableTechnicalEffect', 'Reproducible']
Actual:   ['Credible', 'DistinguishingFeatures', 'FeatureTechnicalContribution', 'IndependentContribution', 'NormalTechnicalContribution', 'ReliableTechnicalEffect', 'Reproducible']

Test: Independent + Excluded Field (rejected)
BLFs: ['IndependentContribution', 'ComputerSimulation']
Expected: ['ComputerSimulation', 'DistinguishingFeatures', 'IndependentContribution']
Actual:   ['ComputerSimulation', 'DistinguishingFeatures', 'ExcludedField', 'IndependentContribution', 'NonReproducible', 'NumOrComp']

Test: Independent + Unexpected Effect + Precise Terms + One Way Street
BLFs: ['IndependentContribution', 'UnexpectedEffect', 'PreciseTerms', 'OneWayStreet']
Expected: ['BonusEffect', 'DistinguishingFeatures', 'FeatureTechnicalContribution', 'IndependentContribution', 'NormalTechnicalContribution', 'OneWayStreet', 'PreciseTerms', 'UnexpectedEffect']
Actual:   ['BonusEffect', 'DistinguishingFeatures', 'FeatureTechnicalContribution', 'IndependentContribution', 'NonReproducible', 'NormalTechnicalContribution', 'OneWayStreet', 'PreciseTerms', 'UnexpectedEffect']

Test: Mathematical Method + Specific Purpose + Functionally Limited
BLFs: ['MathematicalMethod', 'SpecificPurpose', 'FunctionallyLimited']
Expected: ['AppliedInField', 'DistinguishingFeatures', 'FeatureTechnicalContribution', 'FunctionallyLimited', 'MathematicalContribution', 'MathematicalMethod', 'SpecificPurpose']
Actual:   ['AppliedInField', 'DistinguishingFeatures', 'ExcludedField', 'FeatureTechnicalContribution', 'FunctionallyLimited', 'MathematicalContribution', 'MathematicalMethod', 'NonReproducible', 'SpecificPurpose']

Test: No BLFs (Base Case Only)
BLFs: []
Expected: ['DistinguishingFeatures']
Actual:   ['DistinguishingFeatures', 'NonReproducible']

Test: Only Circumvent Tech Problem
BLFs: ['CircumventTechProblem']
Expected: ['CircumventTechProblem', 'DistinguishingFeatures']
Actual:   ['CircumventTechProblem', 'DistinguishingFeatures', 'NonReproducible']

Test: Only Excluded Field
BLFs: ['OtherExclusions']
Expected: ['DistinguishingFeatures', 'OtherExclusions']
Actual:   ['DistinguishingFeatures', 'ExcludedField', 'NonReproducible', 'OtherExclusions']

============================================================
TEST SUMMARY
============================================================
Tests run: 13
Failures: 11
Errors: 0
Success rate: 15.4%

FAILURES:
  - test_combination_contribution_only (__main__.TestSubADMEvaluation): Items in the first set but not the second:
  - test_complex_all_positive (__main__.TestSubADMEvaluation): Items in the first set but not the second:
  - test_computer_simulation_with_technical_adaptation (__main__.TestSubADMEvaluation): Items in the first set but not the second:
  - test_independent_contribution_only (__main__.TestSubADMEvaluation): Items in the first set but not the second:
  - test_independent_with_circumvent_tech_problem (__main__.TestSubADMEvaluation): Items in the first set but not the second:
  - test_independent_with_excluded_field (__main__.TestSubADMEvaluation): Items in the first set but not the second:
  - test_independent_with_unexpected_effect (__main__.TestSubADMEvaluation): Items in the first set but not the second:
  - test_mathematical_method_with_specific_purpose (__main__.TestSubADMEvaluation): Items in the first set but not the second:
  - test_no_blfs (__main__.TestSubADMEvaluation): Items in the first set but not the second:
  - test_only_circumvent_tech_problem (__main__.TestSubADMEvaluation): Items in the first set but not the second:
  - test_only_excluded_field (__main__.TestSubADMEvaluation): Items in the first set but not the second:
